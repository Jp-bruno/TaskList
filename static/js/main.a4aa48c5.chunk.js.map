{"version":3,"sources":["context/itemProps.js","context/listContext.js","components/sideList/removeItem.js","components/sideList/editItemTitle.js","components/sideList/listItem.js","components/sideList/addItem.js","components/sideList/list.js","components/display/saveButton.js","components/display/completeTaskButton.js","components/display/taskSettings.js","components/display/taskDisplay.js","App.js","index.js"],"names":["ItemProps","titulo","descricao","dataFinal","dataInicio","complete","this","listContext","createContext","ListContextProvider","children","useState","items","getFullDate","selectedItem","someSelected","completedTasks","state","setState","writeOnDisplay","content","textarea","document","getElementById","value","today","Date","toLocaleDateString","toTimeString","slice","updateItemDescription","newArray","map","el","Provider","removeItem","ev","targetIndex","Number","target","id","newItemsArray","splice","length","addItem","key","input","find","dmy","hms","newItem","selectItem","oItem","innerText","index","findIndex","componentReference","Array","from","querySelectorAll","forEach","classList","contains","remove","add","updateItemTitle","completeTask","itemIndex","RemoveItem","indexId","context","useContext","onClick","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","EditItemTitle","changeMode","ListItem","editMode","console","log","type","itemTitle","setTimeout","focus","className","maxLength","onKeyDown","onBlur","AddItemButton","placeholder","List","SaveButton","disableSaveButton","CompleteTask","TaskSettings","hasChange","TaskDisplay","contentChanged","useEffect","onChange","readOnly","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a4aa48c5.chunk.js","sourcesContent":["export default class ItemProps {\r\n    constructor(titulo = '', descricao = '', dataFinal = ['1', '1'], dataInicio = ['', ''], complete = false) {\r\n        this.titulo = titulo\r\n        this.descricao = descricao\r\n        this.dataInicio = dataInicio\r\n        this.dataFinal = dataFinal\r\n        this.complete = complete\r\n    }\r\n}","import { createContext, useState } from \"react\";\r\nimport ItemProps from \"./itemProps\";\r\n\r\nexport const listContext = createContext({});\r\n\r\nexport default function ListContextProvider({ children }) {\r\n    const [state, setState] = useState({\r\n        items: [new ItemProps('Encontro com aliens', 'Ser abduzido', '', getFullDate())],\r\n        selectedItem: null,\r\n        someSelected: false,\r\n        completedTasks: []\r\n    })\r\n\r\n    //funções auxiliares\r\n\r\n    function writeOnDisplay(content = '') {\r\n        let textarea = document.getElementById(\"taskDescriptionArea\")\r\n\r\n        textarea.value = content\r\n    }\r\n\r\n    function getFullDate() {\r\n        let today = new Date()\r\n\r\n        let dayMonthYear = today.toLocaleDateString()\r\n\r\n        let hourMin = today.toTimeString().slice(0, 8)\r\n\r\n        return [dayMonthYear, hourMin]\r\n    }\r\n\r\n    //funções da aplicação\r\n\r\n    function addItem(ev) {\r\n        if (ev.key === 'Enter') {\r\n            let input = document.getElementById('newTaskInput');\r\n\r\n            if (input.value === '' || state.items.find(el => el.titulo === input.value)) {\r\n                return\r\n            }\r\n\r\n            const [dmy, hms] = getFullDate();\r\n\r\n            let newItem = new ItemProps(input.value, '', '', [dmy, hms])\r\n\r\n            let newArray = [...state.items, newItem];\r\n\r\n            setState({\r\n                ...state,\r\n                items: newArray,\r\n                someSelected: state.someSelected ? true : false\r\n            })\r\n\r\n            input.value = ''\r\n        }\r\n        return\r\n    }\r\n\r\n    function removeItem(ev) {\r\n        let targetIndex = Number(ev.target.id.slice(6));\r\n\r\n        let newItemsArray = [...state.items];\r\n\r\n        newItemsArray.splice(targetIndex, 1);\r\n\r\n        setState({\r\n            ...state,\r\n            selectedItem: newItemsArray.length === 0 ? null : newItemsArray[newItemsArray.length - 1],\r\n            items: newItemsArray,\r\n            someSelected: newItemsArray.length === 0 ? false : true\r\n        })\r\n\r\n        writeOnDisplay(newItemsArray.length === 0 ? '' : newItemsArray[newItemsArray.length - 1].descricao);\r\n    }\r\n\r\n    function selectItem(ev) {\r\n        let oItem = state.items.find(el => el.titulo === (ev.target ? ev.target.innerText : ev));\r\n\r\n        if (state.someSelected && (state.selectedItem.titulo === oItem.titulo)) {\r\n            return\r\n        }\r\n\r\n        if (state.someSelected) { //para nao perder o que foi escrito antes de mudar para outro item sem ter salvo\r\n            updateItemDescription();\r\n        }\r\n\r\n        let index = state.items.findIndex(el => el.titulo === (ev.target ? ev.target.innerText : ev));\r\n\r\n        let componentReference = document.getElementById('item' + index);\r\n\r\n        let allListItems = Array.from(document.querySelectorAll('.listItem'));\r\n\r\n        allListItems.forEach(el => el.classList.contains('selected') ? el.classList.remove('selected') : () => {})\r\n\r\n        componentReference.classList.add('selected')\r\n\r\n        setState({\r\n            ...state,\r\n            selectedItem: oItem,\r\n            someSelected: true\r\n        })\r\n\r\n        writeOnDisplay(oItem.descricao)\r\n    }\r\n\r\n    function updateItemTitle(ev) {\r\n        if (ev.key === 'Escape') {\r\n            return\r\n        } else {\r\n            let newArray = state.items.map((el, index) => {\r\n                let input = document.getElementById(`newTitleInput${index}`);\r\n\r\n                if (el.titulo === state.selectedItem.titulo) {\r\n                    el.titulo = input.value\r\n                    return el\r\n                } else {\r\n                    return el\r\n                }\r\n            })\r\n\r\n            setState({\r\n                ...state,\r\n                items: newArray\r\n            })\r\n        }\r\n    }\r\n\r\n    function updateItemDescription() {\r\n        let textarea = document.getElementById('taskDescriptionArea');\r\n\r\n        if (textarea.value === state.selectedItem.descricao) {\r\n            return\r\n        } else {\r\n            let newArray = state.items.map(el => {\r\n                if (state.someSelected && (el.titulo === state.selectedItem.titulo)) {\r\n                    el.descricao = textarea.value;\r\n                    return el\r\n                }\r\n                return el\r\n            })\r\n    \r\n            setState({\r\n                ...state,\r\n                items: newArray\r\n            })\r\n        }\r\n    }\r\n\r\n    //funções para tarefas completas\r\n\r\n    function completeTask() {\r\n        let itemIndex = state.items.findIndex(el => el.titulo === state.selectedItem.titulo);\r\n        \r\n        updateItemDescription();\r\n\r\n        let newArray = state.items.map(el => {\r\n            if (el.titulo === state.selectedItem.titulo) {\r\n                el.complete = true;\r\n                el.dataFinal = getFullDate();\r\n                return el\r\n            }\r\n            return el\r\n        })\r\n\r\n        setState({\r\n            ...state,\r\n            items: newArray,\r\n            selectedItem: newArray[itemIndex],\r\n            completedTasks: [...state.completedTasks, newArray[itemIndex]]\r\n        })\r\n    }\r\n\r\n    return (\r\n        <listContext.Provider\r\n            value={\r\n                {\r\n                    items: state.items,\r\n                    selectedItem: state.selectedItem,\r\n                    someSelected: state.someSelected,\r\n                    removeItem,\r\n                    addItem,\r\n                    selectItem,\r\n                    updateItemTitle,\r\n                    updateItemDescription,\r\n                    completeTask\r\n                }\r\n            }>\r\n            {children}\r\n        </listContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import { useContext } from 'react';\r\nimport { listContext } from '../../context/listContext';\r\n\r\nexport default function RemoveItem({indexId}) {\r\n    const context = useContext(listContext);\r\n\r\n    return(\r\n        <button id={'remove' + indexId} onClick={context.removeItem}>\r\n            <svg width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M1.05055 1L16 16M15.9495 1L1 16\" stroke=\"rgba(255,255,255,0.3)\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\r\n            </svg>\r\n        </button>\r\n    )\r\n}","export default function EditItemTitle({indexId, changeMode}) {\r\n    \r\n    return(\r\n        <button id={'edit' + indexId} onClick={changeMode}>\r\n            <svg width=\"26\" height=\"22\" viewBox=\"0 0 26 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path strokeWidth='2' d=\"M8.17896 20.9416H25.2432M15.9462 2.54879L19.3842 5.9868M2.34135 14.8764L16.0627 1.15499C16.8438 0.373937 18.1101 0.373936 18.8912 1.15498L20.4872 2.75102C21.2682 3.53207 21.2682 4.7984 20.4872 5.57945L6.77665 19.29C6.65685 19.4098 2.87073 20.0848 1.47829 20.1308C1.09116 20.1436 1.04264 19.7983 1.12278 19.4193L1.92273 15.6369C1.9598 15.4616 2.01537 15.2887 2.11826 15.142C2.18469 15.0473 2.25931 14.9584 2.34135 14.8764Z\" stroke=\"rgba(255,255,255,0.5)\"/>\r\n            </svg>\r\n        </button>\r\n    )\r\n}","import RemoveItem from './removeItem';\r\nimport EditItemTitle from './editItemTitle';\r\nimport { useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport { listContext } from \"../../context/listContext\";\r\n\r\n\r\nexport default function ListItem({ children, indexId, complete }) {\r\n    const [state, setState] = useState({\r\n        editMode: false,\r\n    })\r\n\r\n    const context = useContext(listContext)\r\n\r\n    function changeMode(ev) {\r\n        if (ev.key === 'Enter' && state.editMode) {\r\n            let input = document.getElementById(`newTitleInput${indexId}`);\r\n\r\n            if (input.value === '') {\r\n                return\r\n            }\r\n\r\n            setState({\r\n                ...state,\r\n                editMode: !(state.editMode)\r\n            })\r\n\r\n            context.updateItemTitle(ev)\r\n        } else\r\n\r\n            if (ev.key === 'Escape' && state.editMode) {\r\n                console.log(context.selectItem.titulo)\r\n\r\n                setState({\r\n                    ...state,\r\n                    editMode: false\r\n                })\r\n            } else\r\n\r\n                if (ev.type === 'click' && state.editMode == false) {\r\n                    let itemTitle = document.getElementById(`titulo${indexId}`).innerText;\r\n\r\n                    context.selectItem(itemTitle)\r\n\r\n                    setTimeout(() => document.getElementById(`newTitleInput${indexId}`).focus(), 50)\r\n\r\n                    setState({\r\n                        ...state,\r\n                        editMode: !(state.editMode)\r\n                    })\r\n                } else\r\n\r\n                    if (ev.type === 'blur') {\r\n                        setState({\r\n                            ...state,\r\n                            editMode: !(state.editMode)\r\n                        })\r\n                    }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <li className={`listItem ${complete ? 'completed' : ''}`} id={`item${indexId}`} key={indexId}>\r\n                {\r\n                    state.editMode ?\r\n                        <>\r\n                            <input maxLength={50} id={`newTitleInput${indexId}`} className='newTitleInput' onKeyDown={changeMode} onBlur={changeMode} />\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <p id={`titulo${indexId}`} onClick={context.selectItem}>{children}</p>\r\n                            <div id='editOrRemoveDiv'>\r\n                                {complete ? null : <EditItemTitle indexId={indexId} changeMode={changeMode} />}\r\n                                <RemoveItem indexId={indexId} />\r\n                            </div>\r\n                        </>\r\n                }\r\n            </li>\r\n        </>\r\n    )\r\n}","import {useContext} from 'react';\r\nimport { listContext } from \"../../context/listContext\";\r\n\r\nexport default function AddItemButton() {\r\n    const context = useContext(listContext)\r\n    \r\n    return(\r\n        <div id='newListItem'>\r\n            <input id='newTaskInput' placeholder='Nova tarefa' onKeyDown={context.addItem}/>\r\n        </div>\r\n    )\r\n}","import ListItem from \"./listItem\";\r\nimport AddItemButton from \"./addItem\";\r\nimport { useContext } from 'react';\r\nimport { listContext } from \"../../context/listContext\";\r\n\r\nexport default function List() {\r\n    const context = useContext(listContext)\r\n\r\n    return (\r\n        <>\r\n            <ul id='list'>\r\n                {\r\n                    context.items ? context.items.map((el, index) => {\r\n                        return (\r\n                            <ListItem\r\n                                key={index}\r\n                                indexId={index}\r\n                                complete={el.complete ? true : false}\r\n                            >\r\n                                {el.titulo}\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n\r\n                        :\r\n\r\n                        null\r\n                }\r\n\r\n                <AddItemButton key='last' />\r\n            </ul>\r\n        </>\r\n    )\r\n}","import { useContext } from \"react\";\r\nimport { listContext } from \"../../context/listContext\";\r\n \r\nexport default function SaveButton({disableSaveButton}) {\r\n    const context = useContext(listContext);\r\n\r\n    function salvarAlteracoesDescricao() {\r\n        context.updateItemDescription()\r\n        disableSaveButton()\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <button id='saveButton' onClick={salvarAlteracoesDescricao}>Salvar</button>\r\n        </>\r\n    )\r\n}","import { useContext } from \"react\"\r\nimport { listContext } from \"../../context/listContext\"\r\n\r\nexport default function CompleteTask() {\r\n    const context = useContext(listContext)\r\n    return (\r\n        <>\r\n            <button id='completeTaskButton' onClick={context.completeTask}>Completar tarefa</button>\r\n        </>\r\n    )\r\n}","import SaveButton from \"./saveButton\";\r\nimport CompleteTask from \"./completeTaskButton\";\r\nimport { useContext, useState } from \"react\";\r\nimport { listContext } from \"../../context/listContext\";\r\n\r\nexport default function TaskSettings({ disableSaveButton, hasChange }) {\r\n    const context = useContext(listContext);\r\n\r\n    return (\r\n        <>\r\n            <div id='taskSettingsOnDisplay'>\r\n                <div id='taskTimeData'>\r\n                    <p>Criado em: <span>{context.selectedItem.dataInicio[0]}</span> {context.selectedItem.dataInicio[1] ? 'às' : ''} <span>{context.selectedItem.dataInicio[1]}</span></p>\r\n                    {\r\n                        context.selectedItem.complete ?\r\n                            <p>Finalizado em: <span>{context.selectedItem.dataFinal[0]}</span> {context.selectedItem.dataFinal[1] ? 'às' : ''} <span>{context.selectedItem.dataFinal[1]}</span></p>\r\n                            :\r\n                            null\r\n                    }\r\n                </div>\r\n\r\n                {\r\n                    context.selectedItem.complete ?\r\n                        null\r\n                        :\r\n                        <div id='saveOrComplete'>\r\n                            {hasChange ? <SaveButton disableSaveButton={disableSaveButton} /> : null}\r\n                            <CompleteTask />\r\n                        </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import { listContext } from \"../../context/listContext\";\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport TaskSettings from \"./taskSettings\";\r\n\r\n\r\nexport default function TaskDisplay() {\r\n    const [state, setState] = useState({\r\n        contentChanged: false,\r\n    })\r\n\r\n    const context = useContext(listContext);\r\n\r\n    function watchChange() {\r\n        setState({\r\n            contentChanged: true\r\n        })\r\n    }\r\n\r\n    function disableSaveButton() {\r\n        setState({\r\n            contentChanged: false\r\n        })\r\n    }\r\n\r\n    function isReadOnly() {\r\n        return context.selectedItem.complete ? true : false;\r\n    }\r\n\r\n    useEffect(() => { //faz o botao de salvar sumir quando outra tarefa é selecionada no meio de uma edição de descrição de tarefa\r\n        return context.someSelected ? disableSaveButton() : () => { }\r\n    }, [context.selectedItem, context.someSelected])\r\n\r\n    return (\r\n        <>\r\n            <section id='taskSection'>\r\n                <textarea\r\n                    onChange={watchChange}\r\n                    id='taskDescriptionArea'\r\n                    placeholder={(context.selectedItem ? 'Descreva sua tarefa.' : 'Selecione uma tarefa.')}\r\n                    readOnly={context.someSelected ? isReadOnly() : true}\r\n                />\r\n\r\n                {\r\n                    context.someSelected ?\r\n                        <TaskSettings\r\n                            hasChange={state.contentChanged}\r\n                            disableSaveButton={disableSaveButton}\r\n                        />\r\n                        :\r\n                        null\r\n                }\r\n            </section>\r\n        </>\r\n    )\r\n}","import List from \"./components/sideList/list\";\nimport TaskDisplay from \"./components/display/taskDisplay\";\nimport { useState, useContext } from 'react';\nimport ListContextProvider, { listContext } from './context/listContext';\nimport './globalCss.css';\nimport './css/listComponents.css';\nimport './css/taskDisplayComponents.css';\n\nfunction App() {\n  const context = useContext(listContext)\n\n  return (\n    <ListContextProvider>\n      <div className=\"App\">\n        <div id='wrapper'>\n          <div id='listWrapper'>\n            <List />\n          </div>\n          <TaskDisplay />\n        </div>\n      </div>\n    </ListContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}